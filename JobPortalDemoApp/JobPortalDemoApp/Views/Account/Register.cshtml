@model JobPortalDemoApp.Models.RegisterFormModel
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Register Form</title>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/Site.css" rel="stylesheet" />
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
    <style>
    .tab {
        float: left;
        border: 1px solid #ccc;
        background-color: #f1f1f1;
        width: 25%;
        height: auto;
        border-right: none;
    }

    .tab button {
        display: block;
        background-color: inherit;
        color: black;
        padding: 22px 16px;
        width: 100%;
        border: none;
        outline: none;
        text-align: left;
        cursor: pointer;
        transition: 0.3s;
        font-size: 17px;
    }

    .tab button:hover {
        background-color: #ddd;
    }

    .tab button.active {
        background-color: #ccc;
    }

    .tabcontent {
        float: left;
        padding: 0px 12px 12px 12px;
        border: 1px solid #ccc;
        width: 70%;
        height: auto;
        display: none;
    }
</style>
    <link href="~/Content/themes/base/chosen.min.css" rel="stylesheet" />
</head>
<body>
    <div class="container">
        <h2>Register</h2>
        <div class="tab">
            <button class="tablinks" onclick="openTabContent(event, 'personal-detail')" id="defaultOpen">Personal Details</button>
            <button class="tablinks" onclick="openTabContent(event, 'education-detail')">Education Details</button>
            <button class="tablinks" onclick="openTabContent(event, 'work-experience-detail')">Work Experience Details</button>
        </div>
        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { id="register-form", enctype = "multipart/form-data" }))
    {

        @*-------Personal details tab content-------*@
        <div id="personal-detail" class="tabcontent">
            <h3>Personal Details</h3>
            <div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ContactNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ContactNumber, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.DOB, new { @class = "form-control date-picker" })
                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Upload Resume", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ResumeFile, new { @class = "form-control-file", type = "file", accept = ".doc,.docx,.pdf,.txt" })
                        @Html.ValidationMessageFor(model => model.ResumeFile, "", new { @class = "text-danger" })
                    </div>
                </div>


            </div>
        </div>

        @*-------Education Details tab content-------*@
        <div id="education-detail" class="tabcontent">
            <h3>Education Details</h3>

            @{
                var qualifications = new List<SelectListItem>();
                qualifications.Add(new SelectListItem()
                {
                    Text = "PHD",
                    Value = "PHD"
                });
                qualifications.Add(new SelectListItem()
                {
                    Text = "Masters",
                    Value = "Masters"
                });

                var educationTypes = new List<SelectListItem>();
                educationTypes.Add(new SelectListItem() { Text = "Full-Time", Value = "1" });
                educationTypes.Add(new SelectListItem() { Text = "Correspondence", Value = "2" });

            }

            <div class="form-group">
                @Html.LabelFor(model => model.EducationDetails.CertificateOrDegreeName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.EducationDetails.CertificateOrDegreeName,
              qualifications,
              "--Select Qualification--",
              new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.EducationDetails.InstituteOrUniversityName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EducationDetails.InstituteOrUniversityName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EducationDetails.InstituteOrUniversityName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.EducationDetails.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.EducationDetails.Type,
              educationTypes,
              "--Select Education Type--",
              new { @class = "form-control" })
                </div>
            </div>
        </div>

        @*-------Work Experience Details tab content-------*@
        <div id="work-experience-detail" class="tabcontent">
            <h3>Work Experience Details</h3>
            <div>
                
                <button class="btn btn-primary" id="add-work-exp-btn">Add Company</button>
                <div id="items"></div>
            </div>
        </div>
        <button type="submit" class="btn btn-primary pull-right">Register</button>

}


    </div>

    <script src="~/Scripts/jquery-1.12.4.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.6.4/css/bootstrap-datepicker.css" type="text/css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.6.4/js/bootstrap-datepicker.js" type="text/javascript"></script>
    @*<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>*@
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/maxdate.js"></script>
    <script src="~/Scripts/chosen.jquery.min.js"></script>
    <script>
        var openTabContent = function (evt, detailSection) {
            var i, tabcontent, tablinks;
            tabcontent = document.getElementsByClassName("tabcontent");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }
            tablinks = document.getElementsByClassName("tablinks");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" active", "");
            }
            document.getElementById(detailSection).style.display = "block";
            evt.target.className += " active";
        }

        $("#defaultOpen").click();

        $(".date-picker").datepicker();
        var count = 0;
        $("#add-work-exp-btn").on("click", function (e) {
            e.preventDefault();
            $.ajax({
                type: 'post',
                url: '@Url.Action("GetWorkExperienceView", "Account")',
                data: { count: count },
                //contentType: 'application/json; charset=utf-8',
                dataType: "html",
                success: function (data) {
                    alert(data);
                    $("#items").append(data);
                    $('.customDate').datepicker();
                    $(".chosen-select").chosen({ width: "95%" });
                    $("form").removeData("validator").removeData("unobtrusiveValidation");
                    $.validator.unobtrusive.parse("form");

                    count++;
                }
            });
            //$("#items").append("<div><label class='control-label col-md-2'>Company Name:</label><input type='text' name='ExperienceDetails[" + count + "].CompanyName' data-val='true' data-val-required='Please enter company name' />" +
            //    "<span class='field-validation-valid text-danger' data-valmsg-for='ExperienceDetails[" + count + "].CompanyName' data-valmsg-replace='true'></span>" +
            //    "<label>Job Title</label><input type='text' name='ExperienceDetails[" + count + "].JobTitle' />" +
            //    "<label>Start date</label><input type='text' name='ExperienceDetails[" + count + "].StartDate' id='ExperienceDetails[" + count + "].StartDate' class='customDate'/>" +
            //    "<label>End date</label><input type='text' name='ExperienceDetails[" + count + "].EndDate' id='ExperienceDetails[" + count + "].EndDate' class='customDate' />" +
            //    "<label>Select skills</label>" +
            //    "<select data-placeholder='Choose options...' multiple class='btn chosen-select' name='ExperienceDetails[" + count + "].Skills'><option value= '1'> C</option><option value='2'>C++</option><option value='3'>C#</option><option value='4'>Java</option><option value='5'>.NET</option></select>" +
            //    "<label>Job Type</label>" +
            //    "<select name='ExperienceDetails[" + count + "].Type'></select>" +
            //    "</div>");

            //$('.customDate').datepicker();
            //$(".chosen-select").chosen({ width: "95%" });
            //$("form").removeData("validator").removeData("unobtrusiveValidation");
            //$.validator.unobtrusive.parse("form");

            //count++;
            @*$.ajax({
                type: 'post',
                url: '@Url.Action("GetWorkExperienceView", "Account")',
                contentType: 'application/json; charset=utf-8',
                dataType: "html",
                success: function (data) {
                    alert(data);
                    $("#items").append(data);
                }
            });*@

            //$("#items").append("<div><label>Company Name:</label><input type='text' name='ExperienceDetails.CompanyName' />" +
            //    "<label>Job Title</label><input type='text' name='ExperienceDetails.JobTitle' />" +
            //    "</div>");
        });



    </script>
    
</body >
</html >
