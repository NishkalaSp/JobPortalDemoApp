@model JobPortalDemoApp.Models.JobPostModel

@using DataLayer.Entities

@{
    if (Model.ActionName.Equals("EditJobPost"))
    {
        Layout = null;
    }
    ViewBag.Title = "New Job Post";
}
<link href="~/Content/themes/base/chosen.min.css" rel="stylesheet" />
<h2>Add New Job Post</h2>

@using (Html.BeginForm(Model.ActionName, "Job", FormMethod.Post, new { id = "add-jobpost-form"}))
{
    <div>
        <input type="hidden" id="JobPostId" name="JobPostId" value="@Model.JobPostId" />
        <input type="hidden" id="ActionName" name="ActionName" value="@Model.ActionName" />
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.TextBoxFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Skills", htmlAttributes: new { @class = "control-label" })
            <div>
                <select data-placeholder='Choose options...' multiple class='form-control chosen-select' name="SkillIds">
                    @foreach (var item in (List<Skill>)ViewBag.SkillList)
                    {
                        <option value='@item.Id'>@item.Name</option>
                    }
                </select>
            </div>   
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JobBrief, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.TextAreaFor(model => model.JobBrief, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.JobBrief, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Responsibilities, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.TextAreaFor(model => model.Responsibilities, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Responsibilities, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Requirements, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.TextAreaFor(model => model.Requirements, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Requirements, "", new { @class = "text-danger" })
            </div>
        </div>


        <input type="reset" class="btn" value="Reset" />
        <input type="submit" class="btn btn-primary" value="Save" />

    </div>

    }

@section scripts{

    <script src="~/Scripts/chosen.jquery.min.js"></script>
    <script>
        $(function () {
            $(".chosen-select").chosen({ width: "50%" });
        });
    </script>
}